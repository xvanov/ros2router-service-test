name: ${CHATTER_ROLE:-listener}
services:
  add_two_ints-cyclonedds:
    build: .
    restart: unless-stopped
    environment:
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
    command: ros2 run demo_nodes_cpp add_two_ints_${ADD_TWO_INTS_ROLE:-server}

  chatter-cyclonedds:
    build: .
    environment:
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
    command: ros2 run demo_nodes_cpp ${CHATTER_ROLE:-listener}

  add_two_ints-fastrtps:
    build: .
    restart: unless-stopped
    command: ros2 run demo_nodes_cpp add_two_ints_${ADD_TWO_INTS_ROLE:-server}
  
  chatter-fastrtps:
    build: .
    command: ros2 run demo_nodes_cpp ${CHATTER_ROLE:-listener}
  
  ros2router:
    image: husarnet/ros2router:1.6.0
    network_mode: service:husarnet
    restart: unless-stopped
    depends_on: 
      husarnet: { condition: service_healthy } # husarnet service is healthy if all hosts listed in WAIT_HOSTNAMES are reachable
    volumes:
      - ./filter.yaml:/filter.yaml
    environment:
      - ROS_LOCALHOST_ONLY=0
      - EXIT_IF_HOST_TABLE_CHANGED=true
      - PARTICIPANTS=husarnet,if-eth0 # eth0 -is the name of the network interface from a Docker network in the container

  husarnet:
    image: husarnet/husarnet:2.0.180
    volumes:
      - /var/lib/husarnet:/var/lib/husarnet
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    environment:
      - HOSTNAME=${CHATTER_ROLE:-listener}-host
      - JOINCODE
      # - HUSARNET_DEBUG=1
      - WAIT_HOSTNAMES=talker-host, listener-host
